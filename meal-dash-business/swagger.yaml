tags:
- name: users
  description: users API
- name: Authentication
  description: User authentication endpoints

paths:
# [POST] sign up user
  /signup:
    post:
      tags:
      - Authentication
      summary: sign-up
      parameters:
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
# [POST] sign in user
  /login:
    post:
      tags:
      - Authentication
      summary: login-in
      parameters:
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/user_login_dto'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
  # [POST] sign in user
  /logout:
    post:
      tags:
      - Authentication
      summary: logout
      security:
        - basicAuth: []
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
  # [PUT] Update Vender Radius
  /update-radius:
    put:
      tags:
      - Authentication
      summary: vender radius update 
      parameters:
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/update_radius'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
  # [PUT] Update Vender Radius
  /verify-user:
    put:
      tags:
      - Authentication
      summary: verify user by security code
      parameters:
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/verify_user'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'               
# [GET] users
  /users:
    get:
      tags:
      - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [POST] users
    post:
      tags:
      - users
      summary: Add User
      parameters:
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] users/id
  /users/{id}:
    get:
      tags:
      - users
      summary: Find User By Id
      parameters:
      - name: id
        in: path
        description: User Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PUT] users/id
    put:
      tags:
      - users
      summary: Update User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        type: integer
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] users/id
    delete:
      tags:
      - users
      summary: Delete User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
# [POST] insert mean plan
  /mealplan/add-mealplan:
    post:
      tags:
      - add-mealplan
      summary: add meal plan
      parameters:
      - name: body
        in: body
        description: meal Data
        required: true
        schema:
          $ref: '#/definitions/createmealplan'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
# [POST] subscription
  /subscription:
    post:
      tags:
      - subscription
      summary: Add subscription plan
      parameters:
      - name: body
        in: body
        description: subscription plan Data
        required: true
        schema:
          $ref: '#/definitions/subscription'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] meals
  /meal:
    get:
      tags:
      - meal
      summary: Find All Meals
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'
    

# [POST] meal
  /meal/add-meal:
    post:
      tags:
      - meal
      summary: Add meal
      consumes:
        - multipart/form-Data
      parameters:
      - name: mealdata
        in: formData
        description: meal Data
        required: true
        type: string
        # schema:
        #   $ref: '#/definitions/meal'
      - name: file
        in: formData
        description: meal image
        required: true
        type: file
        
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] meal
  /meal/all:
    get:
      tags:
      - meal
      summary: Find all meals by vender
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'    

# [GET] meal/id
  /meal/{id}:
    get:
      tags:
      - meal
      summary: Find Meal By Id
      parameters:
      - name: id
        in: path
        description: Meal Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

          # [PUT] meals/id
    put:
      tags:
      - meal
      summary: Update Meal By Id
      parameters:
      - name: id
        in: path
        description: meal Id
        required: true
        type: integer
      - name: body
        in: body
        description: meal Data
        required: true
        schema:
          $ref: '#/definitions/meal'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] meals/id
    delete:
      tags:
      - meal
      summary: Delete Meal By Id
      parameters:
      - name: id
        in: path
        description: meal Id
        required: true
        type: integer
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'



# definitions
definitions:
  users:
    type: object
    required:
        - user_login
        - user_email
        - user_password
        - first_name
        - last_name
        - phone
        - user_type
        - address1
        - address2
        - city
        - state
        - postal
    properties:
      user_login:
        type: string
        description: user login name
      user_email:
        type: string
        description: user Email
      user_password:
        type: string
        description: user Password
      first_name:
        type: string
        description: user first name
      last_name:
        type: string
        description: user last name  
      phone:
        type: string
        description: user Phone
      user_type:
        type: string
        description: user Type
      address1:
        type: string
        description: user Address1
      address2:
        type: string
        description: user Address2
      city:
        type: string
        description: user City
      state:
        type: string
        description: user State
      postal:
        type: string
        description: user Postal

  user_login_dto:
    type: object
    required:
        # - user_login
        - user_email
        - user_password
    properties:
      # user_login:
      #   type: string
      #   description: user login name
      user_email:
        type: string
        description: user Email
      user_password:
        type: string
        description: user Password

  createmealplan:
    type: object
    required:
        - mealplan_recurrence
        - mealplan_title
        - mealplan_description
        - is_active
    properties:
      mealplan_recurrence:
        type: string
        description: meal plan recurrence
      mealplan_title:
        type: string
        description: meal plan title
      mealplan_description:
        type: string
        description: meal plan description
      is_active:
        type: boolean
        description: meal plan is active

  subscription:
    type: object
    required:
        - ends_at
        - starts_at
        - created_at
        - deleted_at
        - is_deleted
        - mealplan_id
    properties:
      ends_at:
        type: string
        format: date-time
        description: subscription end date
      starts_at:
        type: string
        format: date-time
        description: subscription start date
      created_at:
        type: string
        format: date-time
        description: subscription created date
      deleted_at:
        type: string
        format: date-time
        description: subscription deleted date
      is_deleted:
        type: boolean
        description: subscription is deleted
      mealplan_id:
        type: number
        description: subscription meal plan id

  meal:
    type: object
    required:
          - mealTitle
          - mealShortDescription
          - mealLongDescription
          - mealIngredients
          - mealQuantity
          - mealQuantityUnit
    properties:
      mealTitle:
        type: string
        description: Meal item title
      mealShortDescription:
        type: string
        description: Meal item short Description
      mealLongDescription:
        type: string
        description: Meal item long Description
      mealIngredients:
        type: array
        items:
          type: string
        description: Meal item ingredients
      mealCalories:
        type: number
        description: Meal item calories
      mealQuantity:
        type: number
        description: Meal item quantity
      mealQuantityUnit:
        type: string
        description: Meal item quantity unit

  update_radius:
    type: object
    required:
        - user_id
        - user_login
        - vender_radius
    properties:
      user_id:
        type: number
        description: user id
      user_login:
        type: string
        description: username
      vender_radius:
        type: number
        description: vender radius

  verify_user:
    type: object
    required:
        - user_id
        - user_login
        - user_activation_code
    properties:
      user_id:
        type: number
        description: user id
      user_login:
        type: string
        description: username
      user_activation_code:
        type: number
        description: vender radius      
schemes:
 - https
 - http
